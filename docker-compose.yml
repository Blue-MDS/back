version: '3.0'
services:
  server:
    build: .
    container_name: server-blue
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - PORT=${PORT}
      - TRANSPORTER_HOST=${TRANSPORTER_HOST}
      - TRANSPORTER_PORT=${TRANSPORTER_PORT}
      - TRANSPORTER_USER=${TRANSPORTER_USER}
      - TRANSPORTER_PASSWORD=${TRANSPORTER_PASSWORD}
    ports:
      - '3001:3001'
    volumes:
      - '.:/home/server_node/app'
      - '/home/server_node/app/node_modules'
    networks:
      - server-db
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}", "-h", "${DB_HOST}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - server-db
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PG_ADMIN_USER}"
      PGADMIN_DEFAULT_PASSWORD: "${PG_ADMIN_PASSWORD}"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - server-db
    
volumes:
  db-data:
  pgadmin-data:

networks:
  server-db:
    driver: bridge
