version: '3.8'

services:
  server:
    build: .
    container_name: server-blue-prod
    labels:
      - traefik.enable=true
      - traefik.http.routers.server.rule=Host(`kalu971.fr`)
      - traefik.http.routers.server.entrypoints=web
      - traefik.http.routers.server.service=server
      - traefik.docker.network=traefik_network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - PORT=${PORT}
      - NODE_ENV=production
    ports:
      - ${PORT}:${PORT}
    networks:
      - server-db
      - traefik_network

  db:
    image: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - server-db

  traefik:
    image: traefik:v2.2
    container_name: traefik
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_network

volumes:
  db-data:

networks:
  server-db:
    driver: bridge
  traefik_network:
    driver: bridge
